################### Filebeat Configuration Example #########################

############################# Filebeat ######################################
#
# Glolbal filebeat configuration options
#
# https://www.elastic.co/guide/en/beats/filebeat/current/configuration-global-options.html
#
filebeat:

  # Event count spool threshold - forces network flush if exceeded
  spool_size: "{{ filebeat_combined.global.spool_size }}"

  # Enable async publisher pipeline in filebeat (Experimental!)
  publish_async: "{{ filebeat_combined.global.publish_async }}"

  # Defines how often the spooler is flushed. After idle_timeout the spooler is
  # Flush even though spool_size is not reached.
  idle_timeout: "{{ filebeat_combined.global.idle_timeout }}"

  # Name of the registry file. Per default it is put in the current working
  # directory. In case the working directory is changed after when running
  # filebeat again, indexing starts from the beginning again.
  registry_file: "{{ filebeat_combined.global.registry_file }}"

  # Full Path to directory with additional prospector configuration files. Each file must end with .yml
  # These config files must have the full filebeat config part inside, but only
  # the prospector part is processed. All global options like spool_size are ignored.
  # The config_dir MUST point to a different directory then where the main filebeat config file is in.
  config_dir: "{{ filebeat_combined.global.config_dir }}"

  # How long Filebeat waits on shutdown for the publisher to finish sending events before Filebeat shuts down.
  shutdown_timeout: {{ filebeat_combined.global.shutdown_timeout }}

  #
  # List of prospectors to fetch data.
  #
  # https://www.elastic.co/guide/en/beats/filebeat/current/configuration-filebeat-options.html
  prospectors:
    # Each - is a prospector. Below are the prospector specific configurations
{% for prospector in filebeat_combined.prospectors %}
    -
      # Paths that should be crawled and fetched. Glob based paths.
      # To fetch all ".log" files from a specific level of subdirectories
      # /var/log/*/*.log can be used.
      # For each file found under this path, a harvester is started.
      # Make sure not file is defined twice as this can lead to unexpected behaviour.
      paths:
{% for path in prospector.paths %}
        - {{ path }}
{% endfor %}

      # Configure the file encoding for reading files with international characters
      # following the W3C recommendation for HTML5 (http://www.w3.org/TR/encoding).
      # Some sample encodings:
      #   plain, utf-8, utf-16be-bom, utf-16be, utf-16le, big5, gb18030, gbk,
      #    hz-gb-2312, euc-kr, euc-jp, iso-2022-jp, shift-jis, ...
{% if 'encoding' in prospector %}
      encoding: "{{ prospector.encoding }}"
{% endif %}

      # Type of the files. Based on this the way the file is read is decided.
      # The different types cannot be mixed in one prospector
      #
      # Possible options are:
      # * log: Reads every line of the log file (default)
      # * stdin: Reads the standard in
      input_type: "{{ prospector.input_type }}"

      # Exclude lines. A list of regular expressions to match. It drops the lines that are
      # matching any regular expression from the list. The include_lines is called before
      # exclude_lines. By default, no lines are dropped.
{% if 'exclude_lines' in prospector %}
      exclude_lines: "{{ prospector.exclude_lines }}"
{% endif %}

      # Include lines. A list of regular expressions to match. It exports the lines that are
      # matching any regular expression from the list. The include_lines is called before
      # exclude_lines. By default, all the lines are exported.
{% if 'include_lines' in prospector %}
      include_lines: "{{ prospector.include_lines }}"
{% endif %}

      # Exclude files. A list of regular expressions to match. Filebeat drops the files that
      # are matching any regular expression from the list. By default, no files are dropped.
{% if 'exclude_files' in prospector %}
      exclude_files: "{{ prospector.exclude_files }}"
{% endif %}

      # Optional additional fields. These field can be freely picked
      # to add additional information to the crawled log files for filtering
      #fields:
      #  level: debug
      #  review: 1

      # Set to true to store the additional fields as top level fields instead
      # of under the "fields" sub-dictionary. In case of name conflicts with the
      # fields added by Filebeat itself, the custom fields overwrite the default
      # fields.
{% if 'fields_under_root' in prospector %}
      fields_under_root: "{{ prospector.fields_under_root }}"
{% endif %}

      # Ignore files which were modified more then the defined timespan in the past.
      # In case all files on your system must be read you can set this value very large.
      # Time strings like 2h (2 hours), 5m (5 minutes) can be used.
{% if 'ignore_older' in prospector %}
      ignore_older: "{{ prospector.ignore_older }}"
{% endif %}

      # Close older closes the file handler for which were not modified
      # for longer then close_older
      # Time strings like 2h (2 hours), 5m (5 minutes) can be used.
{% if 'close_older' in prospector %}
      close_older: "{{ prospector.close_older }}"
{% endif %}

      # Type to be published in the 'type' field. For Elasticsearch output,
      # the type defines the document type these entries should be stored
      # in. Default: log
      document_type: "{{ prospector.document_type }}"

      # Scan frequency in seconds.
      # How often these files should be checked for changes. In case it is set
      # to 0s, it is done as often as possible. Default: 10s
{% if 'scan_frequency' in prospector %}
      scan_frequency: "{{ prospector.scan_frequency }}"
{% endif %}

      # Defines the buffer size every harvester uses when fetching the file
{% if 'harvester_buffer_size' in prospector %}
      harvester_buffer_size: "{{ prospector.harvester_buffer_size }}"
{% endif %}

      # Maximum number of bytes a single log event can have
      # All bytes after max_bytes are discarded and not sent. The default is 10MB.
      # This is especially useful for multiline log messages which can get large.
{% if 'max_bytes' in prospector %}
      max_bytes: "{{ prospector.max_bytes }}"
{% endif %}

      # Mutiline can be used for log messages spanning multiple lines. This is common
      # for Java Stack Traces or C-Line Continuation
      #multiline:

        # The regexp Pattern that has to be matched. The example pattern matches all lines starting with [
        #pattern: ^\[

        # Defines if the pattern set under pattern should be negated or not. Default is false.
        #negate: false

        # Match can be set to "after" or "before". It is used to define if lines should be append to a pattern
        # that was (not) matched before or after or as long as a pattern is not matched based on negate.
        # Note: After is the equivalent to previous and before is the equivalent to to next in Logstash
        #match: after

        # The maximum number of lines that are combined to one event.
        # In case there are more the max_lines the additional lines are discarded.
        # Default is 500
        #max_lines: 500

        # After the defined timeout, an multiline event is sent even if no new pattern was found to start a new event
        # Default is 5s.
        #timeout: 5s

      # Setting tail_files to true means filebeat starts readding new files at the end
      # instead of the beginning. If this is used in combination with log rotation
      # this can mean that the first entries of a new file are skipped.
{% if 'tail_files' in prospector %}
      tail_files: "{{ prospector.tail_files }}"
{% endif %}

      # Backoff values define how agressively filebeat crawls new files for updates
      # The default values can be used in most cases. Backoff defines how long it is waited
      # to check a file again after EOF is reached. Default is 1s which means the file
      # is checked every second if new lines were added. This leads to a near real time crawling.
      # Every time a new line appears, backoff is reset to the initial value.
{% if 'backoff' in prospector %}
      backoff: "{{ prospector.backoff }}"
{% endif %}

      # Max backoff defines what the maximum backoff time is. After having backed off multiple times
      # from checking the files, the waiting time will never exceed max_backoff idenependent of the
      # backoff factor. Having it set to 10s means in the worst case a new line can be added to a log
      # file after having backed off multiple times, it takes a maximum of 10s to read the new line
{% if 'max_backoff' in prospector %}
      max_backoff: "{{ prospector.max_backoff }}"
{% endif %}

      # The backoff factor defines how fast the algorithm backs off. The bigger the backoff factor,
      # the faster the max_backoff value is reached. If this value is set to 1, no backoff will happen.
      # The backoff value will be multiplied each time with the backoff_factor until max_backoff is reached
{% if 'backoff_factor' in prospector %}
      backoff_factor: "{{ prospector.backoff_factor }}"
{% endif %}

      # This option closes a file, as soon as the file name changes.
      # This config option is recommended on windows only. Filebeat keeps the files it's reading open. This can cause
      # issues when the file is removed, as the file will not be fully removed until also Filebeat closes
      # the reading. Filebeat closes the file handler after ignore_older. During this time no new file with the
      # same name can be created. Turning this feature on the other hand can lead to loss of data
      # on rotate files. It can happen that after file rotation the beginning of the new
      # file is skipped, as the reading starts at the end. We recommend to leave this option on false
      # but lower the ignore_older value to release files faster.
{% if 'force_close_files' in prospector %}
      force_close_files: "{{ prospector.force_close_files }}"
{% endif %}
{% endfor %}





############################# Output ##########################################
#
# Configure what outputs to use when sending the data collected by the beat.
# Multiple outputs may be used.
#
output:

{% if 'logstash' in filebeat_combined.output %}
  # https://www.elastic.co/guide/en/beats/filebeat/current/logstash-output.html
  logstash:
    # The Logstash hosts
    hosts: {{ filebeat_combined.output.logstash.hosts }}

    # Number of workers per Logstash host.
    worker: "{{ filebeat_combined.output.logstash.worker }}"

    # The maximum number of events to bulk into a single batch window. The
    # default is 2048.
    bulk_max_size: "{{ filebeat_combined.output.logstash.bulk_max_size }}"

    # Set gzip compression level.
    compression_level: "{{ filebeat_combined.output.logstash.compression_level }}"

    # Optional load balance the events between the Logstash hosts
    loadbalance: "{{ filebeat_combined.output.logstash.loadbalance }}"

    # Optional index name. The default index name depends on the each beat.
    # For Packetbeat, the default is set to packetbeat, for Topbeat
    # top topbeat and for Filebeat to filebeat.
    index: "{{ filebeat_combined.output.logstash.index }}"

    # Optional TLS. By default is off.
    #tls:
      # List of root certificates for HTTPS server verifications
      #certificate_authorities: ["/etc/pki/root/ca.pem"]

      # Certificate for TLS client authentication
      #certificate: "/etc/pki/client/cert.pem"

      # Client Certificate Key
      #certificate_key: "/etc/pki/client/cert.key"

      # Controls whether the client verifies server certificates and host name.
      # If insecure is set to true, all server host names and certificates will be
      # accepted. In this mode TLS based connections are susceptible to
      # man-in-the-middle attacks. Use only for testing.
      #insecure: false

      # Configure cipher suites to be used for TLS connections
      #cipher_suites: []

      # Configure curve types for ECDHE based cipher suites
      #curve_types: []
{% endif %}



{% if 'file' in filebeat_combined.output %}
  # https://www.elastic.co/guide/en/beats/filebeat/current/file-output.html
  file:
    # Path to the directory where to save the generated files. The option is mandatory.
    path: "{{ filebeat_combined.output.file.path }}"

    # Name of the generated files. The default is `filebeat` and it generates files: `filebeat`, `filebeat.1`, `filebeat.2`, etc.
    filename: "{{ filebeat_combined.output.file.filename }}"

    # Maximum size in kilobytes of each file. When this size is reached, the files are
    # rotated. The default value is 10 MB.
    rotate_every_kb: "{{ filebeat_combined.output.file.rotate_every_kb }}"

    # Maximum number of files under path. When this number of files is reached, the
    # oldest file is deleted and the rest are shifted from last to first. The default
    # is 7 files.
    number_of_files: "{{ filebeat_combined.output.file.number_of_files }}"
{% endif %}



{% if 'console' in filebeat_combined.output %}
  # https://www.elastic.co/guide/en/beats/filebeat/current/console-output.html
  console:
    # Pretty print json event
    pretty: "{{ filebeat_combined.output.console.pretty }}"
{% endif %}





############################# Logging #########################################
#
# https://www.elastic.co/guide/en/beats/filebeat/current/configuration-logging.html
#

# There are three options for the log ouput: syslog, file, stderr.
# Under Windos systems, the log files are per default sent to the file output,
# under all other system per default to syslog.
{% if 'logging' in filebeat_combined %}
logging:

  # Sets log level. The default log level is error.
  # Available log levels are: critical, error, warning, info, debug
  level: {{ filebeat_combined.logging.level }}

  # Enable debug output for selected components. To enable all selectors use ["*"]
  # Other available selectors are beat, publish, service
  # Multiple selectors can be chained.
  selectors: {{ filebeat_combined.logging.selectors }}

  # Send all logging output to syslog. On Windows default is false, otherwise
  # default is true.
  to_syslog: {{ filebeat_combined.logging.to_syslog }}

  # Write all logging output to files. Beats automatically rotate files if rotateeverybytes
  # limit is reached.
  to_files: {{ filebeat_combined.logging.to_files }}

  # To enable logging to files, to_files option has to be set to true
{% if 'files' in filebeat_combined.logging %}
  files:
    # The directory where the log files will written to.
    path: "{{ filebeat_combined.logging.files.path }}"

    # The name of the files where the logs are written to.
    name: "{{ filebeat_combined.logging.files.name }}"

    # Configure log file size limit. If limit is reached, log file will be
    # automatically rotated
    rotateeverybytes: {{ filebeat_combined.logging.files.rotateeverybytes }}

    # Number of rotated log files to keep. Oldest files will be deleted first.
    keepfiles: {{ filebeat_combined.logging.files.keepfiles }}
{% endif %}

  # Enable metrics recording
{% if 'metrics' in filebeat_combined.logging %}
  metrics:
    enabled: {{ filebeat_combined.logging.metrics.enabled }}
    period: {{ filebeat_combined.logging.metrics.period }}
{% endif %}
{% endif %}
